<apex:page standardController="Case" extensions="GCM_CTIController" showHeader="false" docType="html-5.0" lightningStylesheets="true">
    <apex:includeScript value="/support/console/47.0/integration.js"/>
    <apex:slds />
   
    <script type="text/javascript">
    function reloadWin(){
            console.log('Reload window');
            location.reload();
        }
    
    var callbackCall = function(result) { 
            if (result.success) { 
                linkCaseToTask();
                
                console.log('The custom event fired successfully!');
            } else { 
                   console.log('The custom event could not be fired!');
            } 
         };
    var callbackEmail = function(result) { 
            if (result.success) { 
                linkCaseDetailsToTask();
                
                console.log('The custom event fired successfully!');
            } else { 
                   console.log('The custom event could not be fired!');
            } 
         };
    function fireCustomEvent() { 
        //Fire an event of type 'AssociateSR'
        var caseNum = '{!caseNum}';
        var accName = '{!accName}';
        var conName = '{!conName}';
        var caseId = '{!caseRecordId}';
        var InteractionId = '{!interactionId}';
        var caseRec = '{!caseRec.Priority}';
        console.log(caseNum);
        console.log(accName);
        console.log(InteractionId);
        console.log(caseRec);
        var e = document.getElementsByClassName("chartBlock")[0];
        var interactionId = e.options[e.selectedIndex].value;
        var selectedKey = e.options[e.selectedIndex].text;
        console.log('key '+selectedKey.startsWith("Email",0));
        if(selectedKey.startsWith("Call",0)){
            sforce.console.fireEvent('AssociateSRCall', JSON.stringify({caseNumber:'{!caseNum}',accName:'{!accName}',conName:'{!conName}',caseId:'{!caseRecordId}', interactionId : interactionId}), callbackCall);
        }
        if(selectedKey.startsWith("Email",0) || selectedKey.startsWith("Fax",0)){
            sforce.console.fireEvent('AssociateSREmail', JSON.stringify({caseNumber:'{!caseNum}',accName:'{!accName}',conName:'{!conName}',type:'{!caseRec.Type}',area:'{!caseRec.Area__c}',subArea:'{!caseRec.Sub_Area__c}',status:'{!caseRec.Status}',subStatus:'{!caseRec.Sub_Status__c}',priority:'{!caseRec.Priority}', caseId:'{!caseRec.Id}',interactionId : interactionId}), callbackEmail);
        }
    }
    
    var callbackNewEmail = function(result) { 
            if (result.success) { 
                console.log('The custom event fired successfully!');
            } else { 
                console.log('The custom event could not be fired!');
            } 
         };
    function fireNewEmailEvent() { 
        //Fire an event of type 'NewEmail'
        var recId = '{!caseRec.Id}';
        console.log('Rec Id'+recId );
        console.log('Contact Id'+recId );
        console.log('Contact Email'+recId );
        var interactionId = '{!caseRec.CaseNumber}';
        var contactId = '{!caseRec.ContactId}';
        var contactEmail = '{!caseRec.Contact.Email}';
        console.log('interactionId '+interactionId );
        console.log('contactId '+contactId );
        console.log('contactEmail '+contactEmail );
        sforce.console.fireEvent('NewEmail', JSON.stringify({contactEmail : '{!caseRec.Contact.Email}', caseNumber : '{!caseNum}',accName : '{!caseRec.Account.Name}',conName : '{!caseRec.Contact.Name}',caseId : '{!caseRec.Id}',type : '{!caseRec.Type}',area : '{!caseRec.Area__c}',subArea : '{!caseRec.Sub_Area__c}',status : '{!caseRec.Status}',subStatus : '{!caseRec.Sub_Status__c}',priority : '{!caseRec.Priority}',conId : '{!caseRec.ContactId}',accId : '{!caseRec.AccountId}',caseOwner : '{!caseRec.Owner.Name}'}), callbackNewEmail);
    }
    
    function reloadComponent() { 
            refreshPage();
        }
    
    window.onload=function()      
    {        
        console.log('on load vf');
    };
    
    var disbtn = '{!disableButton}';
    console.log('disableButton' +disbtn);
    </script>
    <body>
         
        <apex:form id="interactionForm"> 
            <apex:outputPanel id="selectedScript">
                <script>
                    function fireCustomEvent() { 
                        //Fire an event of type 'AssociateSR'
                        var caseNum = '{!caseNum}';
                        var accName = '{!accName}';
                        var conName = '{!conName}';
                        var InteractionId = '{!interactionId}';
                        var caseRec = '{!caseRec.Priority}';
                        var caseAssociated = '{!caseAssociated}';
                        console.log(caseNum);
                        console.log(accName);
                        console.log(InteractionId);
                        console.log(caseRec);
                        console.log('Case Associated already?'+caseAssociated);
                        var e = document.getElementsByClassName("chartBlock")[0];
                        var interactionId = e.options[e.selectedIndex].value;
                        var selectedKey = e.options[e.selectedIndex].text;
                        console.log('key '+selectedKey.startsWith("Email",0));
                        if(selectedKey.startsWith("Call",0) && caseAssociated == 'false'){
                            sforce.console.fireEvent('AssociateSRCall', JSON.stringify({caseNumber:'{!caseNum}',accName:'{!accName}',conName:'{!conName}',interactionId : interactionId}), callbackCall);
                        }
                        if((selectedKey.startsWith("Email",0) || selectedKey.startsWith("Fax",0)) && caseAssociated == 'false'){
                            sforce.console.fireEvent('AssociateSREmail', JSON.stringify({caseNumber:'{!caseNum}',accName:'{!accName}',conName:'{!conName}',type:'{!caseRec.Type}',area:'{!caseRec.Area__c}',subArea:'{!caseRec.Sub_Area__c}',status:'{!caseRec.Status}',subStatus:'{!caseRec.Sub_Status__c}',priority:'{!caseRec.Priority}', caseId:'{!caseRec.Id}',interactionId : interactionId}), callbackEmail);
                        }
                    }
                </script>
            </apex:outputPanel>
            <apex:actionstatus id="counterStatus">
                <apex:facet name="start">
                    <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb; height:100%;opacity:0.65;width:100%;">
                        <div class="waitingHolder" style="top: 100px; width: 91px;">
                        <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                        <span class="waitingDescription">Linking...</span>
                        </div>
                    </div>
                </apex:facet>
            </apex:actionstatus>
            <apex:actionFunction name="linkCaseToTask" action="{!associateExistingCasetoTask}" oncomplete="reloadWin();" rerender="selected"/>
            <apex:actionFunction name="linkCaseDetailsToTask" action="{!associateExistingCaseDetailstoTask}" oncomplete="reloadWin();" rerender="selected"/>
            <apex:actionFunction name="refreshPage" oncomplete="reloadWin();" rerender="selected"/>
            <apex:selectList value="{!interactionId}" size="1" styleclass="chartBlock">
                <apex:selectOptions value="{!interactionDisplayList}"></apex:selectOptions>
                <apex:actionSupport event="onchange" action="{!pageLoad}" rerender="interactionForm,cmdButton"/> 
            </apex:selectList>
            <apex:outputPanel id="selected"/>
            <br/><br/>
            <apex:commandbutton id="cmdButton" disabled="{!If(disableButton=='None',true, false)}" action="{!checkInteractionCase}" status="counterStatus" oncomplete="fireCustomEvent();" value="Link Interaction" rerender="pageMsgs,selectedScript"/>
            <apex:commandbutton id="rfshButton" action="{!pageLoad}" oncomplete="reloadComponent();"  value="Refresh"/>
            <apex:commandbutton id="newEmailButton" disabled="{!If(disableButton=='None',true, false)}" onclick="fireNewEmailEvent();" rendered="{!If(disableButton=='NewEmail',true, false)}" value="New Email" rerender="selected"/> <br/>
            
            <apex:outputPanel id="pageMsgs">
                <apex:pageMessages ></apex:pageMessages>
            </apex:outputPanel>
        </apex:form> 
    </body>
</apex:page>